[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hyper-core"
version = "0.1.0"
description = "Core framework for building plugin-based CLI applications with ncurses UI"
readme = "README.md"
authors = [
    {name = "Hyper Team", email = "team@hyperjive.com"}
]
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Environment :: Console :: Curses",
]
keywords = ["cli", "ncurses", "plugin", "framework", "terminal"]

dependencies = [
    "PyYAML>=6.0",
    "click>=8.0",
    "rich>=13.0",
    "dependency-injector>=4.41.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
]

[project.scripts]
hyper = "hyper_core.cli:main"
hyper-mcp = "hyper_core.mcp_server:main"

[project.urls]
Homepage = "https://github.com/hyperjive/hyper-core"
Documentation = "https://hyper-core.readthedocs.io"
Repository = "https://github.com/hyperjive/hyper-core"
Issues = "https://github.com/hyperjive/hyper-core/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
hyper_core = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by black)
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.isort]
known-first-party = ["hyper_core"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=hyper_core --cov-report=term-missing"

[tool.coverage.run]
source = ["src/hyper_core"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]