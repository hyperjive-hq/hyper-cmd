name: Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Lint with ruff
      run: |
        ruff check src/ tests/ --ignore=E501,E722,F811,F821
        ruff format --check src/ tests/


    - name: Test with pytest
      run: |
        pytest --cov=hyper_core --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Test CLI commands
      run: |
        # Test basic CLI functionality
        python -m hyper_core.cli --help
        
        # Test init command in a temporary directory
        mkdir -p /tmp/test-hyper-init
        cd /tmp/test-hyper-init
        python -m hyper_core.cli init --force
        
        # Verify the structure was created
        test -d .hyper
        test -f .hyper/config.yaml
        test -d .hyper/plugins
        test -d .hyper/plugins/hello_world
        
        # Test the example plugin
        python -m hyper_core.cli hello --name "CI Test" --style simple
        
        # Clean up
        cd -
        rm -rf /tmp/test-hyper-init

  test-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Test with pytest
      run: |
        pytest --cov=hyper_core

    - name: Test CLI commands
      run: |
        python -m hyper_core.cli --help
        
        # Test init command
        mkdir test-hyper-init
        cd test-hyper-init
        python -m hyper_core.cli init --force
        
        # Test the example plugin
        python -m hyper_core.cli hello --name "Windows CI" --style simple
        
        cd ..
        rmdir /s test-hyper-init

  test-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Test with pytest
      run: |
        pytest --cov=hyper_core

    - name: Test CLI commands
      run: |
        python -m hyper_core.cli --help
        
        # Test init command
        mkdir /tmp/test-hyper-init-mac
        cd /tmp/test-hyper-init-mac
        python -m hyper_core.cli init --force
        
        # Test the example plugin
        python -m hyper_core.cli hello --name "macOS CI" --style simple
        
        # Clean up
        cd -
        rm -rf /tmp/test-hyper-init-mac